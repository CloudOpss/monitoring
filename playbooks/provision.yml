---
- hosts: "{{ target | default('default') }}"
  gather_facts: false

  vars:
    mon_domain: monitoring.savvydatainsights.co.uk
    cert_dir: nginx/letsencrypt/{{ mon_domain }}

  tasks:
    - name: Copy required files
      copy:
        src: "../{{ item }}"
        dest: .
      loop:
        - docker-compose.yml
        - nginx
        - grafana
        - prometheus

    - name: Set up the Docker services
      docker_service:
        project_name: monitoring
        project_src: .
        state: present
      become: true

    - name: Check if acme.sh is installed
      stat:
        path: ~/.acme.sh
      register: acme_path

    - name: Check if fullchain.pem is generated
      stat:
        path: "{{ cert_dir }}/fullchain.pem"
      register: fullchain_path

    - name: Install acme.sh
      block:
        - name: Clone acme.sh
          git:
            repo: https://github.com/savvydatainsights/acme.sh.git
            dest: /tmp/acme.sh
            version: 2.7.9
        - name: Install acme.sh
          shell: ./acme.sh --install
          args:
            chdir: /tmp/acme.sh
      when: not acme_path.stat.exists and not fullchain_path.stat.exists

    - name: Generate the certificate
      block:
        - name: Check for azure_credentials.yml
          stat:
            path: "{{ playbook_dir }}/azure_credentials.yml"
          register: azure_credentials_path
          delegate_to: localhost
        - name: Assert that azure_credentials.yml exists
          assert:
            that: azure_credentials_path.stat.exists
            msg: "The file azure_credentials.yml is required, with the following environment variables set: AZUREDNS_SUBSCRIPTIONID, AZUREDNS_TENANTID, AZUREDNS_APPID and AZUREDNS_CLIENTSECRET."
        - name: Get the Azure credentials' environment variables
          include_vars:
            file: azure_credentials.yml
            name: azure_credentials
        - name: Generate the certificate
          shell: ~/.acme.sh/acme.sh --issue --dns dns_azure --dnssleep 10 --force -d {{ mon_domain }} {{ '--staging' if staging | default('true') | bool else '' }}
          environment: "{{ azure_credentials }}"
        - name: Install the certificate
          shell: ~/.acme.sh/acme.sh --install-cert -d {{ mon_domain }} --fullchain-file {{ cert_dir }}/fullchain.pem --key-file {{ cert_dir }}/privkey.pem --reloadcmd "sudo docker-compose -f ~/docker-compose.yml -p monitoring restart nginx"
        - name: Create a cron file
          cron:
            name: "renew certificate"
            minute: 0
            hour: 0
            user: "{{ ansible_user }}"
            job: "~/.acme.sh/acme.sh --cron > /dev/null"
            cron_file: renew-certificate
          become: true
      when: not fullchain_path.stat.exists
